@using System.Diagnostics.Eventing.Reader
@using MyNotes.BusinessLayer
@using MyNotes.EntityLayer

@{
    NoteManager nm = new NoteManager();
    var lst = nm.List();
}


@{
    ViewBag.Title = "Home Page";
}

<style>
    #heart div {
        color: white;
        cursor: pointer;
        margin-top: 0.75rem;
        margin-bottom: 2rem;
        font-size: 1.2rem;
        text-shadow: 2px 0 0 red, -2px 0 0 red, 0 2px 0 red, 0 -2px 0 red, 1px 1px red, -1px -1px 0 red, 1px -1px 0 red, -1px 1px 0 red;
    }

        #heart div:hover {
            color: red;
        }

    #comment div {
        color: white;
        cursor: pointer;
        margin-top: 0.75rem;
        margin-bottom: 2rem;
        font-size: 1.2rem;
        text-shadow: 2px 0 0 black, -2px 0 0 black, 0 2px 0 black, 0 -2px 0 black, 1px 1px black, -1px -1px 0 black, 1px -1px 0 black, -1px 1px 0 black;
    }

        #comment div:hover {
            color: gray;
        }
</style>

<section class="py-5">
    <div class="container-fluid px-4 px-lg-5 mt-3">
        <div class="row gx-4 gx-lg-5 row-cols-1 row-cols-md-3 row-cols-xl-3 justify-content-center">
            @{
                int i = 0;
            }
            @foreach (var note in Model)
            {
                <div class="col mb-5">
                    <div class="card h-100">
                        <!-- Product image-->
                        <img class="card-img-top" src="https://dummyimage.com/450x300/dee2e6/6c757d.jpg" alt="..." />
                        <!-- Product details-->
                        <div class="card-body p-4 px-1">
                            <div class="text-center">
                                <!-- Product name-->
                                <h5 class="fw-bolder">@note.Title</h5>
                                <!-- Product reviews-->
                                <div class="d-flex justify-content-between small">
                                    <div>
                                        <i class="far fa-user"></i> @note.Owner.UserName
                                    </div>
                                    <div>
                                        <i class="far fa-clock"></i> @note.ModifiedOn.ToString()
                                    </div>
                                </div>
                                <p class="card-text">
                                    @if (string.IsNullOrEmpty(note.Text) == false && note.Text.Length > 70)
                                    {
                                        @note.Text.Substring(0, 70);
                                        <span class="text-danger">...</span>



                                    }
                                    else if (string.IsNullOrEmpty(note.Text))
                                    {
                                    <p class="text-danger">
                                        @("...");
                                    </p>


                                }
                                else
                                {
                                    @note.Text
                                }

                                </div>
                            </div>
                            <hr />
                            <!-- Product actions-->
                            <div class="bg-transparent d-flex justify-content-between">
                                <p>
                                    @*<button class="btn btn-outline-light text-dark btn-lg">
                                            <i class="bi bi-heart text-danger"></i> @note.LikeCount
                                        </button>*@

                                    <div class="icons" id="heart">
                                        <div href="#" class="fas fa-heart" id="heart-btn"></div>&nbsp;<span id="count" class="count">@note.LikeCount</span>
                                    </div>
                                </p>
                                <p>
                                    @*<button class="btn btn-outline-light text-dark btn-lg" data-bs-toggle="modal" data-bs-target="#modal_comment" data-note-id="@note.Id">
                                            <i class="bi bi-chat-left-dots-fill"></i> Yorumlar
                                        </button>*@
                                    <div class="icons" id="comment" data-bs-toggle="modal" data-bs-target="#modal_comment" data-note-id="@note.Id">
                                        <div class="fa-solid fa-comment-dots" id="comment-btn"></div> Yorumlar
                                    </div>
                                </p>
                            </div>
                        </div>
                    </div>
                }

        </div>
    </div>
</section>

@Bootstrap.ModalPopup("modal_comment", "Yorumlar")
<script src="../../Scripts/jquery-3.6.0.min.js"></script>
<script>
    let noteId = -1;
    let modalCommentBodyId = "#modal_comment_body";

    $(function () {
        $('#modal_comment').on('show.bs.modal',
            function (e) {
                var btn = $(e.relatedTarget);
                noteId = btn.data("note-id");
                $(modalCommentBodyId).load("/Comment/ShowNoteComments/" + noteId);
            });
    });
    $(document).ready(function () { // KALPLERI BOYAMA ISLEMI
        $('#heart div').click(function (e) {
            var $this = $(this);
            e.preventDefault();

            //var num = parseInt($("#likeCount").text()); // sayiyi aldigim yer
            //console.log(num);

            if (!$this.hasClass('isItLiked')) {
                $this.addClass('isItLiked');
               
                $(this, "#heart-btn").css("color", "red");
               
                /*  $("#likeCount").text(num + 1); // like islemi*/
            }
            else {

                $this.removeClass('isItLiked');

                $(this, "heart-btn").css("color", '');
                /*   $("#likeCount").text(num - 1); // like i geri cekme islemi*/
            }
        });

    });
    let isClicked = false;
    const likeBtn = document.querySelectorAll(".icons"); // SADECE SAYI ARTTIRIYOR
    likeBtn.forEach(function(item) {
        item.addEventListener("click",
            (event) => {
                let count = item.querySelector(".count");
                console.log(count);
                var $this = $(this);
                if (!isClicked) {
                    isClicked = true;
                    $this.addClass('isItLiked');
                    $(this, "#heart-btn").css("color", "red");
                    count.textContent++;
                } else {
                    isClicked = false;
                    $this.removeClass('isItLiked');
                    $(this, "heart-btn").css("color", '');
                    count.textContent--;
                }
            });
    });

    function doComment(btn, e, commentId, spanId) {
        var button = $(btn);
        var mode = button.data('edit-mode');
        if (e === 'edit_clicked') {
            if (!mode) {
                button.data('edit-mode', true);
                button.removeClass('btn-warning');
                button.addClass('btn-success')
                var btnSpan = button.find('span');
                btnSpan.removeClass('bi-pencil');
                btnSpan.addClass('bi-check');
                $(spanId).addClass('editable');
                $(spanId).attr('contenteditable', true);
                $(spanId).focus();
            }
            else {
                button.data('edit-mode', false);
                button.removeClass('btn-success');
                button.addClass('btn-warning')
                var btnSpan = button.find('span');
                btnSpan.removeClass('bi-check');
                btnSpan.addClass('bi-pencil');
                $(spanId).addClass('editable');
                $(spanId).attr('contenteditable', false);

                var txt = $(spanId).text();

                $.ajax({
                    method: "POST",
                    url: "/Comment/Edit/" + commentId,
                    data: { text: txt }
                }).done(function (data) {
                    if (data.result) {
                        //yorumlari tekrar yukleme
                        $(modalCommentBodyId).load("/Comment/ShowNoteComments/" + noteId);
                    } else {
                        alert("Yorumunuz Guncellenemedi!");
                    }
                }).fail(function () {
                    alert("Sunucu ile baglanti kurulamadi.");
                });

            }
        }
        else if (e === 'delete_clicked') {
            var dialog_res = confirm("Yorum silinsin mi?");
            if (!dialog_res) {
                return false;
            }
            $.ajax({
                method: "GET",
                url: "/Comment/Delete/" + commentId
            }).done(function(data) {
                if (data.result) {
                    $(modalCommentBodyId).load("/Comment/ShowNoteComments/" + noteId);
                } else {
                    alert("Yorum silinemedi!");
                }
            }).fail(function() {
                alert("Sunucu ile baglanti kurulamadi!");
            });
        }
        else if (e === "new_clicked") {
            var txt = $("#new_comment_text").val();

            $.ajax({
                method: "POST",
                url: "/Comment/Create",
                data:{"text":txt,"noteid":noteId}
            }).done(function (data) {
                if (data.result) {
                    $(modalCommentBodyId).load("/Comment/ShowNoteComments/" + noteId);
                } else {
                    alert("Yorum eklenemedi!");
                }
            }).fail(function () {
                alert("Sunucu ile baglanti kurulamadi!");
            });
        }
    }


</script>